#----------------------------------*-sh-*--------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | www.openansys.com
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
#     Copyright (C) 2011-2016 OpenFOAM Foundation
#     Copyright (C) 2017-2022 OpenCFD Ltd.
#------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM, distributed under GPL-3.0-or-later.
#
# File
#     etc/config.csh/mpi
#     - sourced by OpenFOAM-*/etc/cshrc
#
# Description
#     Setup for MPI communications library for OpenFOAM
#
#     For USERMPI, the user is responsible for supplying an appropriate
#     wmake/rules/General/mplibUSERMPI file and managing all settings
#
# User adjustments are controlled by these types of files:
#     - config.csh/prefs.fjmpi
#     - config.csh/prefs.intelmpi
#     - config.csh/prefs.mpich
#     - config.csh/prefs.mpich-gm
#     - config.csh/prefs.mvapich2
#     - config.csh/prefs.openmpi
#     - config.csh/prefs.sys-mpi
#     - config.csh/prefs.sys-openmpi
#     - config.csh/prefs.user-mpi
#
# Note
#     All pre-v2012 names (without the 'prefs.' prefix) are ignored.
#
#     User adjustments may set MPI_ARCH_PATH to an empty string,
#     but are not permitted to unset it.
#
# Environment
#     I_MPI_CC, I_MPI_CXX environment variables define the compiler
#     to be used by Intel mpiicc/mpiicpc wrappers
#
#     MPI_BUFFER_SIZE overrides 'mpiBufferSize' (controlDict entry).
#     Eg,  setenv MPI_BUFFER_SIZE 20000000
#
#------------------------------------------------------------------------------
unsetenv MPI_HOME
setenv FOAM_MPI dummy  # Fallback value
setenv MPI_ARCH_PATH   # Empty, but defined
set _ansysMpiVersion    # Track mpi version as required

# Location for ThirdParty installations
set _ansysMpiPrefixDir="$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER"
set _ansysMpiWarning="openansys (etc/config.csh/mpi) => "  # Prefix for warnings

#------------------------------------------------------------------------------

switch ("$WM_MPLIB")

# ----
# The system openmpi, discover locations by orte-info, mpicc or orterun
# Preserve major or full version for the naming
case sys-openmpi[1-9]:
case sys-openmpi-[1-9]*:
case SYSTEMOPENMPI[1-9]:
case SYSTEMOPENMPI-[1-9]*:
    # Preserve version or full version for the naming
    set _ansysMpiVersion=`echo "$WM_MPLIB" | sed -e 's#^.*MPI##i'`
    #[[fallthrough]]

case sys-openmpi:
case SYSTEMOPENMPI:
    setenv FOAM_MPI "sys-openmpi${_ansysMpiVersion}"
    setenv WM_MPLIB "SYSTEMOPENMPI${_ansysMpiVersion}"

    # Undefine OPAL_PREFIX if set to one of the paths on ansysOldDirs?
    _ansysEtc -config prefs.sys-openmpi  ## Optional adjustments

    # MPI_ARCH_PATH (prefs) if a valid dir, or need to discover
    if ( -d "$MPI_ARCH_PATH" ) then
        _ansysAddPath    "$MPI_ARCH_PATH"/bin
        _ansysAddLibAuto "$MPI_ARCH_PATH"
    else
        setenv MPI_ARCH_PATH
    endif

    # Use <orte-info> (openmpi only command) to query configuration
    # Parse "path:prefix:<pathname>" type of output
    if ( "$MPI_ARCH_PATH" == "" ) then
        set _ansysFoundCmd=`which orte-info`
        if ($status == 0) then
            # prefix
            set _ansysFoundDir=`orte-info --path prefix --parsable | sed -e 's#^path:[^:]*:##'`
            if ( -d "$_ansysFoundDir" ) then
                setenv MPI_ARCH_PATH "${_ansysFoundDir}"

                # libdir
                set _ansysFoundDir=`orte-info --path libdir --parsable | sed -e 's#^path:[^:]*:##'`
                if ( -d "$_ansysFoundDir" ) then
                    _ansysAddLib "$_ansysFoundDir"
                else if ( "$MPI_ARCH_PATH" != "/usr" ) then
                    _ansysAddLibAuto "$MPI_ARCH_PATH"
                endif
            endif
        endif
    endif

    # Use <mpicc> to get the link information and (slight hack)
    # strip off 'lib' to get the prefix directory
    if ( "$MPI_ARCH_PATH" == "" ) then
        set _ansysFoundCmd=`which mpicc`
        if ($status == 0) then
            set _ansysFoundDir=`mpicc --showme:link | sed -e 's#.*-L\([^ ]*\).*#\1#'`
            setenv MPI_ARCH_PATH "${_ansysFoundDir:h}"  # Prefix from libdir
            _ansysAddLib "$_ansysFoundDir"
        endif
    endif

    # Last resort (worse hack):
    # Use <orterun> to get ../path/bin/orterun and infer prefix, libdir
    if ( "$MPI_ARCH_PATH" == "" ) then
        set _ansysFoundCmd=`which orterun`
        if ($status == 0) then
            set _ansysFoundDir="${_ansysFoundCmd:h}"      # The bin dir
            setenv MPI_ARCH_PATH "${_ansysFoundDir:h}"   # The prefix dir

            _ansysAddLibAuto "$MPI_ARCH_PATH"
        endif
    endif

    if ( "$MPI_ARCH_PATH" == "" ) then
        echo "Warn: could not determine prefix for system-openmpi"
    endif
    unset _ansysFoundCmd _ansysFoundDir

    #-
    # TBD: extra (major) version qualifier on name?
    #-
    ## if ( "$FOAM_MPI" == "sys-openmpi" ) then
    ##     set _ansysMpiVersion=`echo "$MPI_ARCH_PATH" | sed -e 's#^.*mpi##'`
    ##     switch ("$_ansysMpiVersion")
    ##     case [1-9]:
    ##         setenv FOAM_MPI "${FOAM_MPI}${_ansysMpiVersion}"
    ##         breaksw
    ##     endsw
    ## endif
    breaksw


# ----
case openmpi:
case openmpi-[1-9]*:
case OPENMPI:
case OPENMPI-[1-9]*:
    setenv FOAM_MPI openmpi-4.1.2

    ## Add version embedded in the naming
    set _ansysMpiVersion=`echo "$WM_MPLIB" | sed -e 's#[^-]*-##'`
    if ( "$_ansysMpiVersion" != "$WM_MPLIB" ) then
        setenv FOAM_MPI "openmpi-${_ansysMpiVersion}"
        setenv WM_MPLIB "OPENMPI-${_ansysMpiVersion}"
    else
        setenv WM_MPLIB OPENMPI
    endif
    _ansysEtc -config prefs.openmpi  ## Optional adjustments

    # MPI_ARCH_PATH (prefs) if a valid dir, or ThirdParty location
    if ( ! -d "$MPI_ARCH_PATH" ) then
        setenv MPI_ARCH_PATH "$_ansysMpiPrefixDir/$FOAM_MPI"
    endif

    # Inform openmpi where to find its install directory
    setenv OPAL_PREFIX "$MPI_ARCH_PATH"

    if ( "$MPI_ARCH_PATH" != "" ) then
        _ansysAddPath    "$MPI_ARCH_PATH"/bin
        _ansysAddMan     "$MPI_ARCH_PATH"/share/man
        _ansysAddLibAuto "$MPI_ARCH_PATH"  "lib$WM_COMPILER_LIB_ARCH"
    endif
    breaksw


# ----
# Arbitrary, user-specified mpi implementation
# - used by spack, which populates appropriate wmake rules
case USERMPI:
    setenv FOAM_MPI user-mpi
    _ansysEtc -config prefs.user-mpi  ## Optional adjustments
    breaksw


# ----
# EasyBuild handles everything via <mpicc>
case EASYBUILDMPI:
    setenv FOAM_MPI eb-mpi
    breaksw


# ----
case sys-mpi:
case SYSTEMMPI:
    setenv FOAM_MPI sys-mpi
    setenv WM_MPLIB SYSTEMMPI
    _ansysEtc -config prefs.sys-mpi  ## Optional adjustments

    # MPI_ARCH_PATH (prefs) or MPI_ROOT (inherited), in that order
    if ( "$MPI_ARCH_PATH" != "" ) then
        setenv MPI_ROOT "$MPI_ARCH_PATH"
    else if ( $?MPI_ROOT ) then
        setenv MPI_ARCH_PATH "$MPI_ROOT"
    endif

    set _ansysMpiWarning="${_ansysMpiWarning}system MPI: "
    if ( ! -d "$MPI_ARCH_PATH" ) then
        echo "${_ansysMpiWarning}has invalid MPI_ROOT"
        echo "Please set correctly. For example,"
        echo '    setenv MPI_ROOT "/opt/mpi"'
        echo
    else
        set _ansysMpiWarning="${_ansysMpiWarning}has unset "

        if ( ! $?MPI_ARCH_FLAGS ) then
            echo "${_ansysMpiWarning}MPI_ARCH_FLAGS"
            echo "Please set correctly. For example,"
            echo '    setenv MPI_ARCH_FLAGS "-DOMPI_SKIP_MPICXX"'
            echo
        endif
        if ( ! $?MPI_ARCH_INC ) then
            echo "${_ansysMpiWarning}MPI_ARCH_INC"
            echo "Please set correctly. For example,"
            echo '    setenv MPI_ARCH_INC "-isystem $MPI_ROOT/include"'
            echo
        endif
        if ( ! $?MPI_ARCH_LIBS ) then
            echo "${_ansysMpiWarning}MPI_ARCH_LIBS"
            echo "Please set correctly. For example,"
            echo '   setenv MPI_ARCH_LIBS "-L$MPI_ROOT/lib -lmpi"'
            echo
        endif
    endif
    breaksw


# ----
case mpich:
case mpich-[1-9]*:
case MPICH:
case MPICH-[1-9]*:
    setenv FOAM_MPI mpich-3.3

    ## Add version embedded in the naming
    set _ansysMpiVersion=`echo "$WM_MPLIB" | sed -e 's#[^-]*-##'`
    if ( "$_ansysMpiVersion" != "$WM_MPLIB" ) then
        setenv FOAM_MPI "mpich-${_ansysMpiVersion}"
        setenv WM_MPLIB "MPICH-${_ansysMpiVersion}"
    else
        setenv WM_MPLIB MPICH
    endif
    _ansysEtc -config prefs.mpich  ## Optional adjustments

    # MPI_ARCH_PATH (prefs) if a valid dir, or use ThirdParty location
    if ( ! -d "$MPI_ARCH_PATH" ) then
        setenv MPI_ARCH_PATH "$_ansysMpiPrefixDir/$FOAM_MPI"
    endif

    setenv MPI_HOME "$MPI_ARCH_PATH"
    if ( "$MPI_ARCH_PATH" != "" ) then
        _ansysAddPath    "$MPI_ARCH_PATH"/bin
        _ansysAddMan     "$MPI_ARCH_PATH"/share/man
        _ansysAddLibAuto "$MPI_ARCH_PATH"  "lib$WM_COMPILER_LIB_ARCH"
    endif
    breaksw


# ----
case MPICH-GM:
    setenv FOAM_MPI mpich-gm
    _ansysEtc -config prefs.mpich-gm  ## Optional adjustments

    # MPI_ARCH_PATH (prefs) if a valid dir, or system location
    if ( ! -d "$MPI_ARCH_PATH" ) then
        setenv MPI_ARCH_PATH /opt/mpi
    endif

    setenv MPICH_PATH "$MPI_ARCH_PATH"
    setenv GM_LIB_PATH "$MPICH_PATH/lib$WM_COMPILER_LIB_ARCH"

    if ( "$MPI_ARCH_PATH" != "" ) then
        _ansysAddPath    "$MPI_ARCH_PATH"/bin
        _ansysAddLib     "$MPI_ARCH_PATH/lib$WM_COMPILER_LIB_ARCH"
        _ansysAddLib     "$GM_LIB_PATH"
    endif
    breaksw


# ----
# MVAPICH2, renamed to contain 'MPI' in its name
case mvapich2:
case mvapich2-[1-9]*:
case MVA2MPI:
case MVA2MPI-[1-9]*:
    setenv FOAM_MPI mvapich2-2.3

    ## Add version embedded in the naming
    set _ansysMpiVersion=`echo "$WM_MPLIB" | sed -e 's#[^-]*-##'`
    if ( "$_ansysMpiVersion" != "$WM_MPLIB" ) then
        setenv FOAM_MPI "mvapich2-${_ansysMpiVersion}"
        setenv WM_MPLIB "MVA2MPI-${_ansysMpiVersion}"
    else
        setenv WM_MPLIB MVA2MPI
    endif
    _ansysEtc -config prefs.mvapich2  ## Optional adjustments

    # MPI_ARCH_PATH (prefs) if a valid dir, or ThirdParty location
    if ( ! -d "$MPI_ARCH_PATH" ) then
        setenv MPI_ARCH_PATH "$_ansysMpiPrefixDir/$FOAM_MPI"
    endif

    if ( "$MPI_ARCH_PATH" != "" ) then
        _ansysAddPath    "$MPI_ARCH_PATH"/bin
        _ansysAddMan     "$MPI_ARCH_PATH"/share/man
        _ansysAddLibAuto "$MPI_ARCH_PATH"  "lib$WM_COMPILER_LIB_ARCH"
    endif
    breaksw


# ----
case CRAY-MPICH:
    setenv FOAM_MPI cray-mpich
    if ( ! $?MPICH_DIR ) setenv MPICH_DIR /dummy
    setenv MPI_ARCH_PATH "$MPICH_DIR"

    if ( ! -d "$MPI_ARCH_PATH" ) then
        echo "%{_ansysMpiWarning}invalid $WM_MPLIB directory"
        echo "    => $MPI_ARCH_PATH"
        echo "Please set MPICH_DIR correctly"
    endif

    if ( "$MPI_ARCH_PATH" != "" ) then
        # _ansysAddPath    "$MPI_ARCH_PATH"/bin
        _ansysAddLib     "$MPI_ARCH_PATH"/lib
    endif
    breaksw


# ----
case HPMPI:
    setenv FOAM_MPI hpmpi
    setenv MPI_HOME /opt/hpmpi
    setenv MPI_ARCH_PATH "$MPI_HOME"

    set _ansysFoundDir=""
    switch (`uname -m`)
    case x86_64:
        set _ansysFoundDir=lib/linux_amd64
        breaksw
    case i686:
        set _ansysFoundDir=lib/linux_ia32
        breaksw
    endsw

    if ( "${_ansysFoundDir}" != "" ) then
        _ansysAddPath "$MPI_ARCH_PATH"/bin
        _ansysAddLib  "$MPI_ARCH_PATH/$_ansysFoundDir"
    else
        echo "openansys: (`uname -m`) - unsupported HP-MPI processor type"
    endif
    unset _ansysFoundDir
    breaksw


# ----
case MPI:
    setenv FOAM_MPI mpi
    setenv MPI_ARCH_PATH /opt/mpi
    breaksw


# ----
case FJMPI:
    setenv FOAM_MPI fjmpi
    _ansysEtc -config prefs.fjmpi  ## Optional adjustments

    # MPI_ARCH_PATH (prefs) or MPI_ROOT (inherited), in that order
    if ( "$MPI_ARCH_PATH" != "" ) then
        setenv MPI_ROOT "$MPI_ARCH_PATH"
    else if ( $?MPI_ROOT ) then
        setenv MPI_ARCH_PATH "$MPI_ROOT"
    endif

    if ( -d "$MPI_ARCH_PATH" ) then
        setenv OPAL_PREFIX "$MPI_ARCH_PATH"  # An openmpi-derivative
        _ansysAddPath    "$MPI_ARCH_PATH"/bin
        _ansysAddLib     "$MPI_ARCH_PATH"/lib64
    else
        echo "%{_ansysMpiWarning}invalid $WM_MPLIB directory"
        echo "    => ${MPI_ARCH_PATH:-unset}"
        echo "Please set MPI_ARCH_PATH or MPI_ROOT correctly"
    endif
    breaksw


# ----
case QSMPI:
    setenv FOAM_MPI qsmpi
    setenv MPI_ARCH_PATH /usr/lib/mpi

    _ansysAddPath    "$MPI_ARCH_PATH"/bin
    _ansysAddLib     "$MPI_ARCH_PATH"/lib
    breaksw


# ----
case SGIMPI:
    if ( ! $?MPI_ROOT ) setenv MPI_ROOT /dummy
    if ( "${MPI_ROOT:h}/" == "$MPI_ROOT" ) then
        setenv MPI_ROOT "${MPI_ROOT:h}"  # Remove trailing slash
    endif

    setenv FOAM_MPI "${MPI_ROOT:t}"
    setenv MPI_ARCH_PATH "$MPI_ROOT"

    if ( ! -d "$MPI_ARCH_PATH" ) then
        echo "%{_ansysMpiWarning}invalid $WM_MPLIB directory"
        echo "    => $MPI_ARCH_PATH"
        echo "Please set MPI_ROOT correctly"
    endif

    _ansysAddPath    "$MPI_ARCH_PATH"/bin
    _ansysAddLib     "$MPI_ARCH_PATH"/lib
    breaksw


# ----
# Also support any ending (eg, INTELMPI_custom) to allow custom wmake rules
case intelmpi:
case intelmpi-[1-9]*:
case INTELMPI*:  ## Also includes (INTELMPI | INTELMPI-[1-9]*)
    setenv FOAM_MPI intelmpi

    ## Add version embedded in the naming
    set _ansysMpiVersion=`echo "$WM_MPLIB" | sed -e 's#[^-]*-##'`
    if ( "$_ansysMpiVersion" != "$WM_MPLIB" ) then
        setenv FOAM_MPI "intelmpi-${_ansysMpiVersion}"
        setenv WM_MPLIB "INTELMPI-${_ansysMpiVersion}"
    else
        setenv WM_MPLIB INTELMPI
        set _ansysMpiVersion=latest   ## Fallback value
    endif
    _ansysEtc -config prefs.intelmpi  ## Optional adjustments

    if ( $?I_MPI_ROOT ) then
        # I_MPI_ROOT: Intel MPI Library installation directory
        setenv MPI_ARCH_PATH "${I_MPI_ROOT}"
    else if ( $?MPI_ROOT ) then
        # MPI_ROOT: General specification
        setenv MPI_ARCH_PATH "$MPI_ROOT"
    else if ( "$MPI_ARCH_PATH" != "" ) then
        # MPI_ARCH_PATH: Set I_MPI_ROOT accordingly
        setenv I_MPI_ROOT "$MPI_ARCH_PATH"
    else
        # Final effort - check ThirdParty opt/intel locations,
        # default is 'latest' unless otherwise specified

        if ( "$_ansysMpiVersion" == "" ) set _ansysMpiVersion=latest

        foreach _ansysFoundDir (\
            "$WM_THIRD_PARTY_DIR/opt/intel/oneapi/mpi/$_ansysMpiVersion" \
            "$WM_THIRD_PARTY_DIR/opt/intel/mpi/$_ansysMpiVersion" \
        )
            if ( -d "$_ansysFoundDir" ) then
                setenv MPI_ARCH_PATH "$_ansysFoundDir"
                setenv I_MPI_ROOT "$MPI_ARCH_PATH"
                break
            endif
        end
    endif
    unset _ansysFoundDir

    if ( -d "$MPI_ARCH_PATH" ) then
        # Remove trailing slash
        if ( "${MPI_ARCH_PATH:h}/" == "$MPI_ARCH_PATH" ) then
            setenv MPI_ARCH_PATH "${MPI_ARCH_PATH:h}"
        endif

        #-
        # TBD: extra version qualifier on name?
        #      eg, when subdir is version number only
        #-
        ## if ( "$FOAM_MPI" == "intelmpi" ) then
        ##     set _ansysMpiVersion="${MPI_ARCH_PATH:t}"
        ##     switch ("$_ansysMpiVersion")
        ##     case [1-9]*:
        ##         setenv FOAM_MPI "intelmpi-${_ansysMpiVersion}"
        ##         breaksw
        ##     endsw
        ## endif
    else
        echo "${_ansysMpiWarning}invalid $WM_MPLIB directory"
        echo "    => ${MPI_ARCH_PATH}"
        echo "Please set I_MPI_ROOT (or MPI_ROOT) correctly."
    endif

    # With/without "intel64/" directory - handled here and in mpi rules

    # Path, lib-path may have been set prior to call
    if ( -d "$MPI_ARCH_PATH" ) then
        if ( -d "$MPI_ARCH_PATH"/intel64/lib ) then
            _ansysAddPath "$MPI_ARCH_PATH"/intel64/bin
            _ansysAddLib "$MPI_ARCH_PATH"/intel64/lib
            _ansysAddLib "$MPI_ARCH_PATH"/intel64/lib/release
        else if ( -d "$MPI_ARCH_PATH"/lib ) then
            _ansysAddPath "$MPI_ARCH_PATH"/bin
            _ansysAddLib "$MPI_ARCH_PATH"/lib
            _ansysAddLib "$MPI_ARCH_PATH"/lib/release
        endif
    endif
    breaksw


# ----
case msmpi:
case msmpi-[1-9]*:
case MSMPI:
case MSMPI-[1-9]*:
    setenv FOAM_MPI msmpi

    ## Add version embedded in the naming
    set _ansysMpiVersion=`echo "$WM_MPLIB" | sed -e 's#[^-]*-##'`
    if ( "$_ansysMpiVersion" != "$WM_MPLIB" ) then
        setenv FOAM_MPI "msmpi-${_ansysMpiVersion}"
        setenv WM_MPLIB "MSMPI-${_ansysMpiVersion}"
    else
        setenv WM_MPLIB MSMPI
    endif
    _ansysEtc -config prefs.msmpi  ## Optional adjustments

    # MPI_ARCH_PATH (prefs) if a valid dir, or ThirdParty location
    # Also consider ThirdParty 'opt/' directory (binary package)
    if ( ! -d "$MPI_ARCH_PATH" ) then
        foreach _ansysFoundDir (\
            "$_ansysMpiPrefixDir/$FOAM_MPI" \
            "$WM_THIRD_PARTY_DIR/opt/$FOAM_MPI" \
        )
            if ( -d "$_ansysFoundDir" ) then
                setenv MPI_ARCH_PATH "$_ansysFoundDir"
                break
            endif
        end
    endif
    unset _ansysFoundDir

    if ( -d "$MPI_ARCH_PATH" ) then
        # _ansysAddPath    "$MPI_ARCH_PATH"/bin
        _ansysAddLib     "$MPI_ARCH_PATH"/lib/x64
    endif
    breaksw

endsw


#------------------------------------------------------------------------------
# Final

# Define fallback value for no MPI
if ( ! $?FOAM_MPI ) then
    setenv FOAM_MPI dummy
else if ( "$FOAM_MPI" == "" ) then
    setenv FOAM_MPI dummy
endif

# Report
if ($?FOAM_VERBOSE && $?prompt) then
    echo "Using mpi type : $WM_MPLIB"
    echo "      FOAM_MPI : $FOAM_MPI"
    if ( "${MPI_ARCH_PATH}" == "" ) then
        echo "        prefix : []"
    else
        echo "        prefix : $MPI_ARCH_PATH"
    endif
endif

# Cleanup
unset _ansysMpiPrefixDir _ansysMpiWarning _ansysMpiVersion

#------------------------------------------------------------------------------
